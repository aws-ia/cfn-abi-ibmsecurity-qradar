AWSTemplateFormatVersion: '2010-09-09'
Description: Setup IAM role for QRadar
Parameters:
  PrincipalArn:
    Type: String
    Description: ARN of the principal that can assume the role
    Default: ''

  CloudTrailSQSArn:
    Type: String
    Description: ARN of SQS queue for the CloudTrail events.

  LogArchiveAccountId:
    Type: String
    Description: AccountId for the Log Archive
    Default: ''

  AuditAccountId:
    Type: String
    Description: AccountId for the Audit
    Default: ''

  GuardDutySQSArn:
    Type: String
    Description: ARN of SQS Queue for the GuardDuty Findings.
    Default: ''

  CloudTrailBucket:
    Type: String
    Description: ARN of the CloudTrail logs bucket
    Default: ''

  GuardDutyFindingsBucket:
    Type: String
    Description: ARN of the GuardDuty Findings Bucket
    Default: ''

Conditions:
  HasPrincipalArn: !Not [!Equals [!Ref PrincipalArn, '']]
  CloudTrailSQSArnNotEmpty: !Not [!Equals [!Ref CloudTrailSQSArn, '']]
  GuardDutySQSArnNotEmpty: !Not [!Equals [!Ref GuardDutySQSArn, '']]
  CloudTrailBucketNotEmpty: !Not [!Equals [!Ref CloudTrailBucket, '']]
  GuardDutyFindingsBucketNotEmpty:
    !Not [!Equals [!Ref GuardDutyFindingsBucket, '']]

Resources:
  QRadarRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Allow * in resource when required
          - id: W12
            reason: Allow * in policy when required
    Type: AWS::IAM::Role
    Properties:
      RoleName: QRadarRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !If
                - HasPrincipalArn
                - !Sub '${PrincipalArn}'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: QradarPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - s3:GetObject
                  - kms:Decrypt
                  - sqs:ReceiveMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !Sub arn:aws:kms:${AWS::Region}:${LogArchiveAccountId}:key/*
                  - !Sub arn:aws:kms:${AWS::Region}:${AuditAccountId}:key/*
                  - !If [
                      CloudTrailSQSArnNotEmpty,
                      !Ref CloudTrailSQSArn,
                      !Ref 'AWS::NoValue',
                    ]
                  - !If [
                      GuardDutySQSArnNotEmpty,
                      !Ref GuardDutySQSArn,
                      !Ref 'AWS::NoValue',
                    ]
                  - !If [
                      CloudTrailBucketNotEmpty,
                      !Sub '${CloudTrailBucket}/*',
                      !Ref 'AWS::NoValue',
                    ]
                  - !If [
                      GuardDutyFindingsBucketNotEmpty,
                      !Sub '${GuardDutyFindingsBucket}/*',
                      !Ref 'AWS::NoValue',
                    ]
