AWSTemplateFormatVersion: 2010-09-09
Description: "QRadar Integration (abp-1kirFQBF75MfEQ3RbMQHRb-42uebFeAkVOI7f1QU0xH7b-ln88rqsi)"

Parameters:
  PrincipalArn:
    Type: String
    Description: ARN of the principal that can assume the role
    Default: ''
  pSRASourceS3BucketName:
    AllowedPattern: '^([\w.-]{1,900})$|^(\/[\w.-]{1,900})*[\w.-]{1,900}$'
    ConstraintDescription: Must be alphanumeric or special characters [., _, -]. In addition, the slash character ( / ) used to delineate hierarchies in parameter names.
    Default: aws-abi
    Description: Source bucket for all templates and artefacts that will get copied into staging bucket
    Type: String
  pSRAS3BucketRegion:
    AllowedPattern: ^[a-z][a-z]-[a-z]*-[0-9]*$
    Type: String
    Default: us-east-1
  pSRAStagingS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Type: String
    Default: cfn-abi-ibmsecurity-qradar
  pRepoURL:
    Default: "https://github.com/aws-samples/aws-security-reference-architecture-examples.git"
    Description: AWS Security Reference Architecture examples repository URL
    Type: String
  pRepoBranch:
    Default: "tags/v3.0.4"
    Description: SRA version to tag
    Type: String
  pConfigureGuardDuty:
    AllowedValues: ['Yes', 'No']
    Default: 'No'
    Description: Enable GuardDuty at Organization level
    Type: String
  pConfigureCloudTrail:
    AllowedValues: ['Yes', 'No']
    Default: 'No'
    Description: Enable CloudTrail
    Type: String
  pDisableGuardDuty:
    AllowedValues: ['Yes', 'No']
    Default: 'No'
    Description: Disable the GuardDuty solution in all accounts and regions before deleting the stack.
    Type: String
  pSRAAlarmEmail:
    AllowedPattern: '^$|^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)$'
    ConstraintDescription: Must be a valid email address.
    Default: ''
    Description: (Optional) Email address for receiving SRA alarms
    Type: String
  pControlTower:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description:
      Indicates whether AWS Control Tower is deployed and being used for this AWS environment.
    Type: String
  pSecurityAccountId:
    AllowedPattern: '^\d{12}$'
    Default: 111111111111
    ConstraintDescription: Must be 12 digits.
    Description: AWS Account ID of the Security Tooling account (ignored for AWS Control Tower environments).
    Type: String
  pLogArchiveAccountId:
    AllowedPattern: '^\d{12}$'
    Default: 222222222222
    ConstraintDescription: Must be 12 digits.
    Description: AWS Account ID of the Log Archive account (ignored for AWS Control Tower environments).
    Type: String
  pGovernedRegions:
    AllowedPattern: '^(ct-regions)|((\b(?<!@)(af-south-1|ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-south-2|ap-southeast-1|ap-southeast-2|ap-southeast-3|ap-southeast-4|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-central-2|eu-north-1|eu-south-1|eu-south-2|eu-west-1|eu-west-2|eu-west-3|me-central-1|me-south-1|sa-east-1|us-east-1|us-east-2|us-gov-east-1|us-gov-west-1|us-west-1|us-west-2)\b,{0,1})*)$'
    ConstraintDescription:
      For AWS Control Tower, set to ct-regions (default).  If not using AWS Control Tower, specify comma separated list of regions (e.g. us-west-2,us-east-1,ap-south-1) in lower case.
    Default: ct-regions
    Description: AWS regions (comma separated) if not using AWS Control Tower (leave set to ct-regions for AWS Control Tower environments)
    Type: String
  pCreateAWSControlTowerExecutionRole:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: Indicates whether the AWSControlTowerExecution role should be created in the management account. (Only when AWS Control Tower landing zone is deployed. The 'pControlTower' must be set to 'true')
    Type: String
  pAdminRoleName:
    Default: 'AWSCloudFormationStackSetAdministrationRole'
    Description: IAM role in the Management account, used to deploy stacks in other account/regions. Needed only when 'pControlTower' is set to 'false'
    Type: String
  pExecRoleName:
    Default: 'AWSCloudFormationStackSetExecutionRole'
    Description: IAM role in the AWS accounts, which allows trusted access to 'pAdminRoleName'. Needed only when 'pControlTower' is set to 'false'
    Type: String

Conditions:
  cEnableGuardDuty: !Equals [!Ref pConfigureGuardDuty, 'Yes']
  cEnableCloudTrail: !Equals [!Ref pConfigureCloudTrail, 'Yes']
  cEnableSetupIAMRoleStack: !Or
    - !Equals [!Ref pConfigureGuardDuty, 'Yes']
    - !Equals [!Ref pConfigureCloudTrail, 'Yes']
  cControlTowerEnabled: !Equals [!Ref pControlTower, 'true']

Resources:
  CloudTrailIntegrationStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Condition: cEnableCloudTrail
    Properties:
      TemplateURL: !Sub https://${pSRASourceS3BucketName}.s3.${pSRAS3BucketRegion}.${AWS::URLSuffix}/${pSRAStagingS3KeyPrefix}/templates/enable-integrations/enable-cloudtrail-integrations.yaml
      Parameters:
        pRepoURL: !Ref pRepoURL
        pRepoBranch: !Ref pRepoBranch
        pSRAS3BucketRegion: !Ref pSRAS3BucketRegion
        pSRASourceS3BucketName: !Ref pSRASourceS3BucketName
        pSRAStagingS3KeyPrefix: !Ref pSRAStagingS3KeyPrefix
        pCreateAWSControlTowerExecutionRole: !Ref pCreateAWSControlTowerExecutionRole
        pControlTower: !Ref pControlTower
        pGovernedRegions: !Ref pGovernedRegions
        pSecurityAccountId: !Ref pSecurityAccountId
        pLogArchiveAccountId: !Ref pLogArchiveAccountId

  CloudTrailReadyWaitCondition:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      CTReady: !If [cEnableCloudTrail, !Ref CloudTrailIntegrationStack, ""]

  GuardDutyIntegrationStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CloudTrailReadyWaitCondition
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Condition: cEnableGuardDuty
    Properties:
      TemplateURL: !Sub https://${pSRASourceS3BucketName}.s3.${pSRAS3BucketRegion}.${AWS::URLSuffix}/${pSRAStagingS3KeyPrefix}/templates/enable-integrations/enable-guardduty-integrations.yaml
      Parameters:
        pSRASourceS3BucketName: !Ref pSRASourceS3BucketName
        pSRAStagingS3KeyPrefix: !Ref pSRAStagingS3KeyPrefix
        pSRAS3BucketRegion: !Ref pSRAS3BucketRegion
        pRepoURL: !Ref pRepoURL
        pRepoBranch: !Ref pRepoBranch
        pSRAAlarmEmail: !Ref pSRAAlarmEmail
        pDisableGuardDuty: !Ref pDisableGuardDuty
        pControlTower: !Ref pControlTower
        pGovernedRegions: !Ref pGovernedRegions
        pSecurityAccountId: !Ref pSecurityAccountId
        pLogArchiveAccountId: !Ref pLogArchiveAccountId

  SetupIAMRoleStack:
    Type: AWS::CloudFormation::StackSet
    Condition: cEnableSetupIAMRoleStack
    Properties:
      StackSetName: qradar-setup-iam-role-stack
      AdministrationRoleARN: !If 
          - cControlTowerEnabled
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/AWSControlTowerStackSetRole
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${pAdminRoleName}
      CallAs: SELF
      Description: Setup necessary IAM roles needed for the QRadar application to access the services
      ExecutionRoleName: !If
          - cControlTowerEnabled
          - 'AWSControlTowerExecution'
          - !Ref pExecRoleName
      Capabilities:
        - CAPABILITY_NAMED_IAM
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureTolerancePercentage: 0
        MaxConcurrentPercentage: 100
        RegionConcurrencyType: PARALLEL
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !If
                - cEnableCloudTrail
                - !GetAtt CloudTrailIntegrationStack.Outputs.oLogArchiveAccountId
                - !If
                  - cEnableGuardDuty
                  - !GetAtt GuardDutyIntegrationStack.Outputs.oLogArchiveAccountId
                  - !Ref 'AWS::NoValue'
          Regions:
            - !Ref AWS::Region
      TemplateURL: !Sub https://${pSRASourceS3BucketName}.s3.${pSRAS3BucketRegion}.${AWS::URLSuffix}/${pSRAStagingS3KeyPrefix}/templates/enable-integrations/setup-iam-role.yaml
      Parameters:
        - ParameterKey: PrincipalArn
          ParameterValue: !Ref PrincipalArn
        - ParameterKey: LogArchiveAccountId
          ParameterValue:
            !If [
              cEnableCloudTrail,
              !GetAtt CloudTrailIntegrationStack.Outputs.oLogArchiveAccountId,
              !GetAtt GuardDutyIntegrationStack.Outputs.oLogArchiveAccountId,
            ]
        - ParameterKey: AuditAccountId
          ParameterValue:
            !If [
              cEnableCloudTrail,
              !GetAtt CloudTrailIntegrationStack.Outputs.oAuditAccountId,
              !GetAtt GuardDutyIntegrationStack.Outputs.oAuditAccountId,
            ]
        - ParameterKey: CloudTrailSQSArn
          ParameterValue:
            !If [
              cEnableCloudTrail,
              !GetAtt CloudTrailIntegrationStack.Outputs.oCloudTrailSQSQueueArn,
              '',
            ]
        - ParameterKey: GuardDutySQSArn
          ParameterValue:
            !If [
              cEnableGuardDuty,
              !GetAtt GuardDutyIntegrationStack.Outputs.oGuardDutySQSQueueArn,
              '',
            ]
        - ParameterKey: CloudTrailBucket
          ParameterValue:
            !If [
              cEnableCloudTrail,
              !GetAtt CloudTrailIntegrationStack.Outputs.oOrganizationCloudTrailS3BucketArn,
              '',
            ]
        - ParameterKey: GuardDutyFindingsBucket
          ParameterValue:
            !If [
              cEnableGuardDuty,
              !GetAtt GuardDutyIntegrationStack.Outputs.oPublishingDestinationBucketArn,
              '',
            ]

      Tags:
        - Key: sra-solution
          Value: !Ref pSRAStagingS3KeyPrefix

Outputs:
  QRadarCloudTrailSQSQueueUrl:
    Description: SQS URL for the CloudTrail events
    Value: !GetAtt [CloudTrailIntegrationStack, Outputs.oCloudTrailSQSQueueURL]
    Condition: cEnableCloudTrail
  QRadarGuardDutyFindingsSQSQueueUrl:
    Description: SQS URL for the GuardDuty findings
    Value: !GetAtt [GuardDutyIntegrationStack, Outputs.oGuardDutySQSQueueURL]
    Condition: cEnableGuardDuty
  QRadarRegion:
    Description: AWS Region where the SQS queues and bucket resides.
    Value: !Ref AWS::Region
  QRadarIAMRoleArn:
    Description: The ARN of the QRadar IAM role
    Condition: cEnableSetupIAMRoleStack
    Value:
      !If [
        cEnableCloudTrail,
        !Sub 'arn:aws:iam::${CloudTrailIntegrationStack.Outputs.oLogArchiveAccountId}:role/QRadarRole',
        !Sub 'arn:aws:iam::${GuardDutyIntegrationStack.Outputs.oLogArchiveAccountId}:role/QRadarRole',
      ]
